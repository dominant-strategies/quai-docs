{
	"openapi": "3.0.0",
	"info": {
		"title": "Quai JSON RPC API",
		"version": "1.0.0"
	},
	"servers": [
		{
			"url": "https://rpc.dev.quai.network/cyprus1"
		}
	],
	"paths": {
		"/": {
			"post": {
				"summary": "quai_getUncleByBlockHashAndIndex",
				"description": "Returns uncle data for a given block hash and index.",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Request"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Response"
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"Request": {
				"type": "object",
				"required": ["jsonrpc", "method", "params", "id"],
				"properties": {
					"jsonrpc": {
						"type": "string",
						"example": "2.0",
						"enum": ["2.0"]
					},
					"method": {
						"type": "string",
						"description": "The name of the method to be invoked.",
						"example": "quai_getUncleByBlockHashAndIndex",
						"enum": ["quai_getUncleByBlockHashAndIndex"]
					},
					"params": {
						"type": "array",
						"description": "The block hash and uncle index.",
						"items": {
							"type": "string"
						},
						"maxItems": 2,
						"minItems": 2,
						"example": ["0x000000ceb1b398df1e8026b2a426b411f6cc9041f2f4356211a3c723a2f797d2", "0x1"]
					},
					"id": {
						"type": "integer",
						"description": "A unique identifier for the request.",
						"example": 1
					}
				}
			},
			"Response": {
				"type": "object",
				"properties": {
					"jsonrpc": {
						"type": "string",
						"example": "2.0"
					},
					"result": {
						"type": "object",
						"properties": {
							"coinbase": {
								"type": "string",
								"description": "The address of the account that mined this uncle."
							},
							"difficulty": {
								"type": "string",
								"description": "The difficulty for the uncle block."
							},
							"headerHash": {
								"type": "string",
								"description": "The header hash of the uncle block."
							},
							"location": {
								"type": "string",
								"description": "The zone location identifier of the uncle block."
							},
							"mixHash": {
								"type": "string",
								"description": "The mix hash of the uncle block."
							},
							"nonce": {
								"type": "string",
								"description": "The random number used in the valid proof-of-work."
							},
							"number": {
								"type": "string",
								"description": "The number of the uncle block."
							},
							"parentHash": {
								"type": "string",
								"description": "The hash of the parent block."
							},
							"primeTerminusNumber": {
								"type": "string",
								"description": "The prime terminus number of the uncle block."
							},
							"time": {
								"type": "string",
								"description": "The timestamp of the uncle block."
							},
							"txHash": {
								"type": "string",
								"description": "The transaction hash of the uncle block."
							}
						},
						"example": {
							"coinbase": "0x00a3e45aa16163f2663015b6695894d918866d19",
							"difficulty": "0x130ba1",
							"headerHash": "0x54b8e2e1157c2f34b3c732763b4dcbffbcd801160249a51ba1de9717e18da5c8",
							"location": "0x0000",
							"mixHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
							"nonce": "0x11c548e71375d8e7",
							"number": "0x15a",
							"parentHash": "0x000002be4d9a1ad6e7d1e8330dd8de59eb561f66a8dcd4997f40a06e244cb735",
							"primeTerminusNumber": "0x41",
							"time": "0x66b3e487",
							"txHash": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421"
						},
						"description": "The uncle data for the corresponding block number and index."
					},
					"id": {
						"type": "integer",
						"example": 1
					}
				}
			}
		}
	}
}
